
!function(e){
    e.fn.extend({
        jQMeter: function(t){
            t && "object" == typeof t && (t = e.extend({}, e.jQMeter.defaults, t)), 
			this.each(function(){
                new e.jQMeter(this, t)
            })
        }
    }),
	
 e.jQMeter = function(t, r){
        if (goal = parseInt(r.goal.replace(/\D/g, "")), raised = parseInt(r.raised.replace(/\D/g, "")), width = r.width, height = r.height, bgColor = r.bgColor, barColor = r.barColor, orientation = r.orientation, animationSpeed = r.animationSpeed, counterSpeed = r.counterSpeed, displayTotal = r.displayTotal, total = raised / goal * 100, total >= 100 && (total = 100), "vertical" == orientation ? (e(t).html('<div class="therm outer-therm vertical"><div class="therm inner-therm vertical"><span style="display:none;">' + total + "</span></div></div>"), e(t).children(".outer-therm").attr("style", "width:" + width + ";height:" + height + ";background-color:" + bgColor), e(t).children(".outer-therm").children(".inner-therm").attr("style", "background-color:" + barColor + ";height:0;width:" + width), e(t).children(".outer-therm").children(".inner-therm").animate({
            height: total + "%"
        }, animationSpeed)) : (e(t).html('<div class="therm-p outer-therm"><div class="therm inner-therm"><span style="position:absolute;text-align:center;color:#fff;">' + total + "</span></div></div>"), e(t).children(".outer-therm").attr("style", "width:" + width + ";height:" + height + ";background-color:" + bgColor), e(t).children(".outer-therm").children(".inner-therm").attr("style", "background-color:" + barColor + ";height:" + height + ";width:0"), e(t).children(".outer-therm").children(".inner-therm").animate({
            width: total + "%"
        }, animationSpeed)), displayTotal) {
        	n= 10.5+ "%";
			/*if(total<27){
				n= 10+ "%";
			}else{
				n= (parseInt(r.width))*(parseInt(total)/100)-20+ "px";
			}*/
			
            "horizontal" != orientation, e(t).children(".outer-therm").children(".inner-therm").children().show(), e(t).children(".outer-therm").children(".inner-therm").children().css("left", n), e({
                Counter: 0
            })
			.animate({
                Counter: e(t).children(".outer-therm").children(".inner-therm").children().text()
            }, {
                duration: counterSpeed,
                easing: "swing",
                step: function(){
                    e(t).children(".outer-therm").children(".inner-therm").children().text(Math.ceil(this.Counter) + "%")
                }
            })
        }
		//outer-therm{margin:10px 5px;}调整框的距离， border-radius这是内圆角
        e(t).append("<style>.therm-p{height:30px;border-radius:5px;}.therm{height:30px;border-radius:5px 0 0 5px;}.outer-therm{margin:10px 5px;}.inner-therm span {color: #ffff;display: inline-block;font-family: Trebuchet MS;font-size: 12px;font-weight: bold;}.vertical.inner-therm span{width:100%;text-align:center;}.vertical.outer-therm{position:relative;}.vertical.inner-therm{position:absolute;bottom:0;}</style>")
    },
 e.jQMeter.defaults = {
        width:'90%',
    	height:'19px',
        bgColor: "#E4E4E4",
        barColor: "#399ED8",
        orientation: "horizontal",
        animationSpeed: 2e3,
        counterSpeed: 2e3,
        displayTotal: !0,
    }
}(jQuery);
