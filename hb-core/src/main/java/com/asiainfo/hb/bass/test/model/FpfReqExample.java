package com.asiainfo.hb.bass.test.model;

import java.util.ArrayList;
import java.util.List;

public class FpfReqExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ST.FPF_REQ
     *
     * @mbggenerated Tue Aug 22 17:11:54 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ST.FPF_REQ
     *
     * @mbggenerated Tue Aug 22 17:11:54 CST 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ST.FPF_REQ
     *
     * @mbggenerated Tue Aug 22 17:11:54 CST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ST.FPF_REQ
     *
     * @mbggenerated Tue Aug 22 17:11:54 CST 2017
     */
    public FpfReqExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ST.FPF_REQ
     *
     * @mbggenerated Tue Aug 22 17:11:54 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ST.FPF_REQ
     *
     * @mbggenerated Tue Aug 22 17:11:54 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ST.FPF_REQ
     *
     * @mbggenerated Tue Aug 22 17:11:54 CST 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ST.FPF_REQ
     *
     * @mbggenerated Tue Aug 22 17:11:54 CST 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ST.FPF_REQ
     *
     * @mbggenerated Tue Aug 22 17:11:54 CST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ST.FPF_REQ
     *
     * @mbggenerated Tue Aug 22 17:11:54 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ST.FPF_REQ
     *
     * @mbggenerated Tue Aug 22 17:11:54 CST 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ST.FPF_REQ
     *
     * @mbggenerated Tue Aug 22 17:11:54 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ST.FPF_REQ
     *
     * @mbggenerated Tue Aug 22 17:11:54 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ST.FPF_REQ
     *
     * @mbggenerated Tue Aug 22 17:11:54 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ST.FPF_REQ
     *
     * @mbggenerated Tue Aug 22 17:11:54 CST 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andReqCodeIsNull() {
            addCriterion("REQ_CODE is null");
            return (Criteria) this;
        }

        public Criteria andReqCodeIsNotNull() {
            addCriterion("REQ_CODE is not null");
            return (Criteria) this;
        }

        public Criteria andReqCodeEqualTo(String value) {
            addCriterion("REQ_CODE =", value, "reqCode");
            return (Criteria) this;
        }

        public Criteria andReqCodeNotEqualTo(String value) {
            addCriterion("REQ_CODE <>", value, "reqCode");
            return (Criteria) this;
        }

        public Criteria andReqCodeGreaterThan(String value) {
            addCriterion("REQ_CODE >", value, "reqCode");
            return (Criteria) this;
        }

        public Criteria andReqCodeGreaterThanOrEqualTo(String value) {
            addCriterion("REQ_CODE >=", value, "reqCode");
            return (Criteria) this;
        }

        public Criteria andReqCodeLessThan(String value) {
            addCriterion("REQ_CODE <", value, "reqCode");
            return (Criteria) this;
        }

        public Criteria andReqCodeLessThanOrEqualTo(String value) {
            addCriterion("REQ_CODE <=", value, "reqCode");
            return (Criteria) this;
        }

        public Criteria andReqCodeLike(String value) {
            addCriterion("REQ_CODE like", value, "reqCode");
            return (Criteria) this;
        }

        public Criteria andReqCodeNotLike(String value) {
            addCriterion("REQ_CODE not like", value, "reqCode");
            return (Criteria) this;
        }

        public Criteria andReqCodeIn(List<String> values) {
            addCriterion("REQ_CODE in", values, "reqCode");
            return (Criteria) this;
        }

        public Criteria andReqCodeNotIn(List<String> values) {
            addCriterion("REQ_CODE not in", values, "reqCode");
            return (Criteria) this;
        }

        public Criteria andReqCodeBetween(String value1, String value2) {
            addCriterion("REQ_CODE between", value1, value2, "reqCode");
            return (Criteria) this;
        }

        public Criteria andReqCodeNotBetween(String value1, String value2) {
            addCriterion("REQ_CODE not between", value1, value2, "reqCode");
            return (Criteria) this;
        }

        public Criteria andReqNameIsNull() {
            addCriterion("REQ_NAME is null");
            return (Criteria) this;
        }

        public Criteria andReqNameIsNotNull() {
            addCriterion("REQ_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andReqNameEqualTo(String value) {
            addCriterion("REQ_NAME =", value, "reqName");
            return (Criteria) this;
        }

        public Criteria andReqNameNotEqualTo(String value) {
            addCriterion("REQ_NAME <>", value, "reqName");
            return (Criteria) this;
        }

        public Criteria andReqNameGreaterThan(String value) {
            addCriterion("REQ_NAME >", value, "reqName");
            return (Criteria) this;
        }

        public Criteria andReqNameGreaterThanOrEqualTo(String value) {
            addCriterion("REQ_NAME >=", value, "reqName");
            return (Criteria) this;
        }

        public Criteria andReqNameLessThan(String value) {
            addCriterion("REQ_NAME <", value, "reqName");
            return (Criteria) this;
        }

        public Criteria andReqNameLessThanOrEqualTo(String value) {
            addCriterion("REQ_NAME <=", value, "reqName");
            return (Criteria) this;
        }

        public Criteria andReqNameLike(String value) {
            addCriterion("REQ_NAME like", value, "reqName");
            return (Criteria) this;
        }

        public Criteria andReqNameNotLike(String value) {
            addCriterion("REQ_NAME not like", value, "reqName");
            return (Criteria) this;
        }

        public Criteria andReqNameIn(List<String> values) {
            addCriterion("REQ_NAME in", values, "reqName");
            return (Criteria) this;
        }

        public Criteria andReqNameNotIn(List<String> values) {
            addCriterion("REQ_NAME not in", values, "reqName");
            return (Criteria) this;
        }

        public Criteria andReqNameBetween(String value1, String value2) {
            addCriterion("REQ_NAME between", value1, value2, "reqName");
            return (Criteria) this;
        }

        public Criteria andReqNameNotBetween(String value1, String value2) {
            addCriterion("REQ_NAME not between", value1, value2, "reqName");
            return (Criteria) this;
        }

        public Criteria andReqChargeIsNull() {
            addCriterion("REQ_CHARGE is null");
            return (Criteria) this;
        }

        public Criteria andReqChargeIsNotNull() {
            addCriterion("REQ_CHARGE is not null");
            return (Criteria) this;
        }

        public Criteria andReqChargeEqualTo(String value) {
            addCriterion("REQ_CHARGE =", value, "reqCharge");
            return (Criteria) this;
        }

        public Criteria andReqChargeNotEqualTo(String value) {
            addCriterion("REQ_CHARGE <>", value, "reqCharge");
            return (Criteria) this;
        }

        public Criteria andReqChargeGreaterThan(String value) {
            addCriterion("REQ_CHARGE >", value, "reqCharge");
            return (Criteria) this;
        }

        public Criteria andReqChargeGreaterThanOrEqualTo(String value) {
            addCriterion("REQ_CHARGE >=", value, "reqCharge");
            return (Criteria) this;
        }

        public Criteria andReqChargeLessThan(String value) {
            addCriterion("REQ_CHARGE <", value, "reqCharge");
            return (Criteria) this;
        }

        public Criteria andReqChargeLessThanOrEqualTo(String value) {
            addCriterion("REQ_CHARGE <=", value, "reqCharge");
            return (Criteria) this;
        }

        public Criteria andReqChargeLike(String value) {
            addCriterion("REQ_CHARGE like", value, "reqCharge");
            return (Criteria) this;
        }

        public Criteria andReqChargeNotLike(String value) {
            addCriterion("REQ_CHARGE not like", value, "reqCharge");
            return (Criteria) this;
        }

        public Criteria andReqChargeIn(List<String> values) {
            addCriterion("REQ_CHARGE in", values, "reqCharge");
            return (Criteria) this;
        }

        public Criteria andReqChargeNotIn(List<String> values) {
            addCriterion("REQ_CHARGE not in", values, "reqCharge");
            return (Criteria) this;
        }

        public Criteria andReqChargeBetween(String value1, String value2) {
            addCriterion("REQ_CHARGE between", value1, value2, "reqCharge");
            return (Criteria) this;
        }

        public Criteria andReqChargeNotBetween(String value1, String value2) {
            addCriterion("REQ_CHARGE not between", value1, value2, "reqCharge");
            return (Criteria) this;
        }

        public Criteria andReqChargeIdIsNull() {
            addCriterion("REQ_CHARGE_ID is null");
            return (Criteria) this;
        }

        public Criteria andReqChargeIdIsNotNull() {
            addCriterion("REQ_CHARGE_ID is not null");
            return (Criteria) this;
        }

        public Criteria andReqChargeIdEqualTo(String value) {
            addCriterion("REQ_CHARGE_ID =", value, "reqChargeId");
            return (Criteria) this;
        }

        public Criteria andReqChargeIdNotEqualTo(String value) {
            addCriterion("REQ_CHARGE_ID <>", value, "reqChargeId");
            return (Criteria) this;
        }

        public Criteria andReqChargeIdGreaterThan(String value) {
            addCriterion("REQ_CHARGE_ID >", value, "reqChargeId");
            return (Criteria) this;
        }

        public Criteria andReqChargeIdGreaterThanOrEqualTo(String value) {
            addCriterion("REQ_CHARGE_ID >=", value, "reqChargeId");
            return (Criteria) this;
        }

        public Criteria andReqChargeIdLessThan(String value) {
            addCriterion("REQ_CHARGE_ID <", value, "reqChargeId");
            return (Criteria) this;
        }

        public Criteria andReqChargeIdLessThanOrEqualTo(String value) {
            addCriterion("REQ_CHARGE_ID <=", value, "reqChargeId");
            return (Criteria) this;
        }

        public Criteria andReqChargeIdLike(String value) {
            addCriterion("REQ_CHARGE_ID like", value, "reqChargeId");
            return (Criteria) this;
        }

        public Criteria andReqChargeIdNotLike(String value) {
            addCriterion("REQ_CHARGE_ID not like", value, "reqChargeId");
            return (Criteria) this;
        }

        public Criteria andReqChargeIdIn(List<String> values) {
            addCriterion("REQ_CHARGE_ID in", values, "reqChargeId");
            return (Criteria) this;
        }

        public Criteria andReqChargeIdNotIn(List<String> values) {
            addCriterion("REQ_CHARGE_ID not in", values, "reqChargeId");
            return (Criteria) this;
        }

        public Criteria andReqChargeIdBetween(String value1, String value2) {
            addCriterion("REQ_CHARGE_ID between", value1, value2, "reqChargeId");
            return (Criteria) this;
        }

        public Criteria andReqChargeIdNotBetween(String value1, String value2) {
            addCriterion("REQ_CHARGE_ID not between", value1, value2, "reqChargeId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ST.FPF_REQ
     *
     * @mbggenerated do_not_delete_during_merge Tue Aug 22 17:11:54 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ST.FPF_REQ
     *
     * @mbggenerated Tue Aug 22 17:11:54 CST 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}